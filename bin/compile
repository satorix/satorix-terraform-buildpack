#!/usr/bin/env bash
# bin/compile <build-dir>

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILD_DIR="${1}"
TERRAFORM_DIR="${BUILD_DIR}/vendor/terraform"
PROFILED_DIR="${BUILD_DIR}/.profile.d"

TERRAFORM_BIN="${TERRAFORM_DIR}/bin/terraform"

if [[ -n ${TERRAFORM_BIN_URL:-} ]]; then
	echo 'Using $TERRAFORM_BIN_URL from ENV VAR for installation' | indent
else
	TERRAFORM_BIN_URL="https://releases.hashicorp.com/terraform/0.11.14/terraform_0.11.14_linux_amd64.zip"
fi

topic "Installing Terraform from ${TERRAFORM_BIN_URL}"
curl -s -L "${TERRAFORM_BIN_URL}" > "terraform-bin.zip"
mkdir -p "${TERRAFORM_DIR}/bin"
unzip -p "terraform-bin.zip" > "${TERRAFORM_BIN}"
chmod +x "${TERRAFORM_BIN}"
rm "terraform-bin.zip"

echo 'Setting up $PATH' | indent
mkdir -p "${PROFILED_DIR}"
echo 'PATH=$PATH:$HOME/vendor/terraform/bin' > "${PROFILED_DIR}/terraform.sh"
